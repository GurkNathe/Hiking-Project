{"ast":null,"code":"export default function getHaversineDistance(firstLocation, secondLocation) {\n  var earthRadius = 6371; // km \n\n  var diffLat = (secondLocation.lat - firstLocation.lat) * Math.PI / 180;\n  var diffLng = (secondLocation.lng - firstLocation.lng) * Math.PI / 180;\n  var arc = Math.cos(firstLocation.lat * Math.PI / 180) * Math.cos(secondLocation.lat * Math.PI / 180) * Math.sin(diffLng / 2) * Math.sin(diffLng / 2) + Math.sin(diffLat / 2) * Math.sin(diffLat / 2);\n  var line = 2 * Math.atan2(Math.sqrt(arc), Math.sqrt(1 - arc));\n  var distance = earthRadius * line;\n  return distance;\n}","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Classes/CS380/Hiking Project/Hiking-Project/hiking-project/src/scripts/haversine.js"],"names":["getHaversineDistance","firstLocation","secondLocation","earthRadius","diffLat","lat","Math","PI","diffLng","lng","arc","cos","sin","line","atan2","sqrt","distance"],"mappings":"AAAA,eAAe,SAASA,oBAAT,CAA8BC,aAA9B,EAA6CC,cAA7C,EAA4D;AACzE,MAAMC,WAAW,GAAG,IAApB,CADyE,CAC/C;;AAE1B,MAAMC,OAAO,GAAG,CAACF,cAAc,CAACG,GAAf,GAAmBJ,aAAa,CAACI,GAAlC,IAAyCC,IAAI,CAACC,EAA9C,GAAmD,GAAnE;AACA,MAAMC,OAAO,GAAG,CAACN,cAAc,CAACO,GAAf,GAAmBR,aAAa,CAACQ,GAAlC,IAAyCH,IAAI,CAACC,EAA9C,GAAmD,GAAnE;AAEA,MAAMG,GAAG,GAAGJ,IAAI,CAACK,GAAL,CACIV,aAAa,CAACI,GAAd,GAAoBC,IAAI,CAACC,EAAzB,GAA8B,GADlC,IACyCD,IAAI,CAACK,GAAL,CAAST,cAAc,CAACG,GAAf,GAAqBC,IAAI,CAACC,EAA1B,GAA+B,GAAxC,CADzC,GAEMD,IAAI,CAACM,GAAL,CAASJ,OAAO,GAAC,CAAjB,CAFN,GAE4BF,IAAI,CAACM,GAAL,CAASJ,OAAO,GAAC,CAAjB,CAF5B,GAGMF,IAAI,CAACM,GAAL,CAASR,OAAO,GAAC,CAAjB,IAAsBE,IAAI,CAACM,GAAL,CAASR,OAAO,GAAC,CAAjB,CAHxC;AAIA,MAAMS,IAAI,GAAG,IAAIP,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACS,IAAL,CAAUL,GAAV,CAAX,EAA2BJ,IAAI,CAACS,IAAL,CAAU,IAAEL,GAAZ,CAA3B,CAAjB;AAEA,MAAMM,QAAQ,GAAGb,WAAW,GAAGU,IAA/B;AAEA,SAAOG,QAAP;AACD","sourcesContent":["export default function getHaversineDistance(firstLocation, secondLocation){\r\n  const earthRadius = 6371; // km \r\n\r\n  const diffLat = (secondLocation.lat-firstLocation.lat) * Math.PI / 180;  \r\n  const diffLng = (secondLocation.lng-firstLocation.lng) * Math.PI / 180;  \r\n\r\n  const arc = Math.cos(\r\n                  firstLocation.lat * Math.PI / 180) * Math.cos(secondLocation.lat * Math.PI / 180) \r\n                  * Math.sin(diffLng/2) * Math.sin(diffLng/2)\r\n                  + Math.sin(diffLat/2) * Math.sin(diffLat/2);\r\n  const line = 2 * Math.atan2(Math.sqrt(arc), Math.sqrt(1-arc));\r\n\r\n  const distance = earthRadius * line; \r\n\r\n  return distance;\r\n}"]},"metadata":{},"sourceType":"module"}