{"ast":null,"code":"export default function haversineDistance(coords1, coords2, isMiles) {\n  function toRad(x) {\n    return x * Math.PI / 180;\n  }\n\n  var lon1 = coords1[0];\n  var lat1 = coords1[1];\n  var lon2 = coords2[0];\n  var lat2 = coords2[1];\n  var R = 6371; // km\n\n  var x1 = lat2 - lat1;\n  var dLat = toRad(x1);\n  var x2 = lon2 - lon1;\n  var dLon = toRad(x2);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  if (isMiles) d /= 1.60934;\n  return d;\n}","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Classes/CS380/Hiking Project/Hiking-Project/hiking-project/src/scripts/haversine.js"],"names":["haversineDistance","coords1","coords2","isMiles","toRad","x","Math","PI","lon1","lat1","lon2","lat2","R","x1","dLat","x2","dLon","a","sin","cos","c","atan2","sqrt","d"],"mappings":"AAAA,eAAe,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6CC,OAA7C,EAAsD;AACnE,WAASC,KAAT,CAAeC,CAAf,EAAkB;AAChB,WAAOA,CAAC,GAAGC,IAAI,CAACC,EAAT,GAAc,GAArB;AACD;;AAED,MAAIC,IAAI,GAAGP,OAAO,CAAC,CAAD,CAAlB;AACA,MAAIQ,IAAI,GAAGR,OAAO,CAAC,CAAD,CAAlB;AAEA,MAAIS,IAAI,GAAGR,OAAO,CAAC,CAAD,CAAlB;AACA,MAAIS,IAAI,GAAGT,OAAO,CAAC,CAAD,CAAlB;AAEA,MAAIU,CAAC,GAAG,IAAR,CAXmE,CAWrD;;AAEd,MAAIC,EAAE,GAAGF,IAAI,GAAGF,IAAhB;AACA,MAAIK,IAAI,GAAGV,KAAK,CAACS,EAAD,CAAhB;AACA,MAAIE,EAAE,GAAGL,IAAI,GAAGF,IAAhB;AACA,MAAIQ,IAAI,GAAGZ,KAAK,CAACW,EAAD,CAAhB;AACA,MAAIE,CAAC,GAAGX,IAAI,CAACY,GAAL,CAASJ,IAAI,GAAG,CAAhB,IAAqBR,IAAI,CAACY,GAAL,CAASJ,IAAI,GAAG,CAAhB,CAArB,GACNR,IAAI,CAACa,GAAL,CAASf,KAAK,CAACK,IAAD,CAAd,IAAwBH,IAAI,CAACa,GAAL,CAASf,KAAK,CAACO,IAAD,CAAd,CAAxB,GACAL,IAAI,CAACY,GAAL,CAASF,IAAI,GAAG,CAAhB,CADA,GACqBV,IAAI,CAACY,GAAL,CAASF,IAAI,GAAG,CAAhB,CAFvB;AAGA,MAAII,CAAC,GAAG,IAAId,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACgB,IAAL,CAAUL,CAAV,CAAX,EAAyBX,IAAI,CAACgB,IAAL,CAAU,IAAIL,CAAd,CAAzB,CAAZ;AACA,MAAIM,CAAC,GAAGX,CAAC,GAAGQ,CAAZ;AAEA,MAAGjB,OAAH,EAAYoB,CAAC,IAAI,OAAL;AAEZ,SAAOA,CAAP;AACD","sourcesContent":["export default function haversineDistance(coords1, coords2, isMiles) {\r\n  function toRad(x) {\r\n    return x * Math.PI / 180;\r\n  }\r\n\r\n  var lon1 = coords1[0];\r\n  var lat1 = coords1[1];\r\n\r\n  var lon2 = coords2[0];\r\n  var lat2 = coords2[1];\r\n\r\n  var R = 6371; // km\r\n\r\n  var x1 = lat2 - lat1;\r\n  var dLat = toRad(x1);\r\n  var x2 = lon2 - lon1;\r\n  var dLon = toRad(x2)\r\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  var d = R * c;\r\n\r\n  if(isMiles) d /= 1.60934;\r\n\r\n  return d;\r\n}"]},"metadata":{},"sourceType":"module"}