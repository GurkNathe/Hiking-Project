{"ast":null,"code":"/*Calculates distanc between two point on Earth, assuming Earth is a perfect sphere*/\nexport default function getHaversineDistance(firstLocation, secondLocation, isMiles) {\n  var earthRadius = 6371; // km \n\n  var diffLat = (secondLocation.lat - firstLocation.lat) * Math.PI / 180;\n  var diffLon = (secondLocation.lon - firstLocation.lno) * Math.PI / 180;\n  var arc = Math.cos(firstLocation.lat * Math.PI / 180) * Math.cos(secondLocation.lat * Math.PI / 180) * Math.sin(diffLon / 2) * Math.sin(diffLon / 2) + Math.sin(diffLat / 2) * Math.sin(diffLat / 2);\n  var line = 2 * Math.atan2(Math.sqrt(arc), Math.sqrt(1 - arc));\n  var distance = earthRadius * line;\n  if (isMiles) distance /= 1.60934;\n  return distance;\n}","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Classes/CS380/Hiking Project/Hiking-Project/hiking-project/src/scripts/haversine.js"],"names":["getHaversineDistance","firstLocation","secondLocation","isMiles","earthRadius","diffLat","lat","Math","PI","diffLon","lon","lno","arc","cos","sin","line","atan2","sqrt","distance"],"mappings":"AAAA;AAEA,eAAe,SAASA,oBAAT,CAA8BC,aAA9B,EAA6CC,cAA7C,EAA6DC,OAA7D,EAAqE;AAClF,MAAMC,WAAW,GAAG,IAApB,CADkF,CACxD;;AAE1B,MAAMC,OAAO,GAAG,CAACH,cAAc,CAACI,GAAf,GAAmBL,aAAa,CAACK,GAAlC,IAAyCC,IAAI,CAACC,EAA9C,GAAmD,GAAnE;AACA,MAAMC,OAAO,GAAG,CAACP,cAAc,CAACQ,GAAf,GAAmBT,aAAa,CAACU,GAAlC,IAAyCJ,IAAI,CAACC,EAA9C,GAAmD,GAAnE;AAEA,MAAMI,GAAG,GAAGL,IAAI,CAACM,GAAL,CACIZ,aAAa,CAACK,GAAd,GAAoBC,IAAI,CAACC,EAAzB,GAA8B,GADlC,IAEID,IAAI,CAACM,GAAL,CAASX,cAAc,CAACI,GAAf,GAAqBC,IAAI,CAACC,EAA1B,GAA+B,GAAxC,CAFJ,GAGID,IAAI,CAACO,GAAL,CAASL,OAAO,GAAC,CAAjB,CAHJ,GAG0BF,IAAI,CAACO,GAAL,CAASL,OAAO,GAAC,CAAjB,CAH1B,GAIIF,IAAI,CAACO,GAAL,CAAST,OAAO,GAAC,CAAjB,IAAsBE,IAAI,CAACO,GAAL,CAAST,OAAO,GAAC,CAAjB,CAJtC;AAKA,MAAMU,IAAI,GAAG,IAAIR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,IAAL,CAAUL,GAAV,CAAX,EAA2BL,IAAI,CAACU,IAAL,CAAU,IAAEL,GAAZ,CAA3B,CAAjB;AAEA,MAAIM,QAAQ,GAAGd,WAAW,GAAGW,IAA7B;AAEA,MAAGZ,OAAH,EAAYe,QAAQ,IAAI,OAAZ;AAEZ,SAAOA,QAAP;AACD","sourcesContent":["/*Calculates distanc between two point on Earth, assuming Earth is a perfect sphere*/\r\n\r\nexport default function getHaversineDistance(firstLocation, secondLocation, isMiles){\r\n  const earthRadius = 6371; // km \r\n\r\n  const diffLat = (secondLocation.lat-firstLocation.lat) * Math.PI / 180;  \r\n  const diffLon = (secondLocation.lon-firstLocation.lno) * Math.PI / 180;  \r\n\r\n  const arc = Math.cos(\r\n                  firstLocation.lat * Math.PI / 180) * \r\n                  Math.cos(secondLocation.lat * Math.PI / 180) * \r\n                  Math.sin(diffLon/2) * Math.sin(diffLon/2) + \r\n                  Math.sin(diffLat/2) * Math.sin(diffLat/2);\r\n  const line = 2 * Math.atan2(Math.sqrt(arc), Math.sqrt(1-arc));\r\n\r\n  var distance = earthRadius * line; \r\n\r\n  if(isMiles) distance /= 1.60934;\r\n\r\n  return distance;\r\n}"]},"metadata":{},"sourceType":"module"}